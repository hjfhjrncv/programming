#include <iostream>
#include <queue>
using namespace std;
 
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
 
    int n, k;
    cin >> n >> k;
 
    long long x, a, b, c;
    cin >> x >> a >> b >> c;
 
    queue<long long> window;
    long long sum = 0;
    long long result = 0;
    long long current = x;
 
    for (int i = 1; i <= n; ++i) {
        
        window.push(current);
        sum += current;
 
       
        if (window.size() > k) {
            sum -= window.front();
            window.pop();
        }
 
        
        if (i >= k) {
            result ^= sum;
        }
 
        
        current = (a * current + b) % c;
    }
 
    cout << result << '\n';
    return 0;
####################



#include <iostream>
#include <deque>
#include <vector>
using namespace std;
 
int main() {
    int n, k;
    cin >> n >> k;
 
    long long x, a, b, c;
    cin >> x >> a >> b >> c;
 
    vector<int> arr(n);
    arr[0] = x;
    for (int i = 1; i < n; i++) {
        arr[i] = (1LL * a * arr[i - 1] + b) % c;
    }
 
    deque<int> dq;
    int result = 0;
 
    for (int i = 0; i < n; i++) {
        if (!dq.empty() && dq.front() <= i - k)
            dq.pop_front();
 
        while (!dq.empty() && arr[dq.back()] >= arr[i])
            dq.pop_back();
 
        dq.push_back(i);
 
        if (i >= k - 1)
            result ^= arr[dq.front()];
    }
 
    cout << result << "\n";
    return 0;



##############################################



#include <iostream>
#include <vector>
using namespace std;
 
int main() {
    int n, k;
    cin >> n >> k;
 
    long long x, a, b, c;
    cin >> x >> a >> b >> c;
 
    vector<int> arr(n);
    arr[0] = x;
    for (int i = 1; i < n; i++) {
        arr[i] = (1LL * a * arr[i - 1] + b) % c;
    }
 
    int window_xor = 0, result = 0;
 
    for (int i = 0; i < n; i++) {
        window_xor ^= arr[i];
 
        if (i >= k) {
            window_xor ^= arr[i - k];
        }
 
        if (i >= k - 1) {
            result ^= window_xor;
        }
    }
 
    cout << result << "\n";
    return 0;


33333333333333333333333


#include <iostream>
#include <unordered_map>
#include <vector>
using namespace std;
 
int main() {
    int n, k;
    cin >> n >> k;
    vector<int> arr(n);
    for (int &x : arr) cin >> x;
 
    unordered_map<int, int> freq;
    vector<int> result;
 
    for (int i = 0; i < k; i++) {
        freq[arr[i]]++;
    }
    result.push_back(freq.size());
 
    for (int i = k; i < n; i++) {
        freq[arr[i - k]]--;
        if (freq[arr[i - k]] == 0)
            freq.erase(arr[i - k]);
 
        freq[arr[i]]++;
        result.push_back(freq.size());
    }
 
    for (int x : result) cout << x << " ";
    cout << endl;
 
    return 0;
}
